// Proto file for Pact plugin interface V1

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.21.12
// source: proto/pact_plugin.proto

package io_pact_plugin

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CatalogueEntry_EntryType int32

const (
	// Matcher for contents of messages, requests or response bodies
	CatalogueEntry_CONTENT_MATCHER CatalogueEntry_EntryType = 0
	// Generator for contents of messages, requests or response bodies
	CatalogueEntry_CONTENT_GENERATOR CatalogueEntry_EntryType = 1
	// Transport for a network protocol
	CatalogueEntry_TRANSPORT CatalogueEntry_EntryType = 2
	// Matching rule for content field/values
	CatalogueEntry_MATCHER CatalogueEntry_EntryType = 3
	// Type of interaction
	CatalogueEntry_INTERACTION CatalogueEntry_EntryType = 4
)

// Enum value maps for CatalogueEntry_EntryType.
var (
	CatalogueEntry_EntryType_name = map[int32]string{
		0: "CONTENT_MATCHER",
		1: "CONTENT_GENERATOR",
		2: "TRANSPORT",
		3: "MATCHER",
		4: "INTERACTION",
	}
	CatalogueEntry_EntryType_value = map[string]int32{
		"CONTENT_MATCHER":   0,
		"CONTENT_GENERATOR": 1,
		"TRANSPORT":         2,
		"MATCHER":           3,
		"INTERACTION":       4,
	}
)

func (x CatalogueEntry_EntryType) Enum() *CatalogueEntry_EntryType {
	p := new(CatalogueEntry_EntryType)
	*p = x
	return p
}

func (x CatalogueEntry_EntryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CatalogueEntry_EntryType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_pact_plugin_proto_enumTypes[0].Descriptor()
}

func (CatalogueEntry_EntryType) Type() protoreflect.EnumType {
	return &file_proto_pact_plugin_proto_enumTypes[0]
}

func (x CatalogueEntry_EntryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CatalogueEntry_EntryType.Descriptor instead.
func (CatalogueEntry_EntryType) EnumDescriptor() ([]byte, []int) {
	return file_proto_pact_plugin_proto_rawDescGZIP(), []int{1, 0}
}

// Enum of content type override. This is a hint on how the content type should be treated.
type Body_ContentTypeHint int32

const (
	// Determine the form of the content using the default rules of the Pact implementation
	Body_DEFAULT Body_ContentTypeHint = 0
	// Contents must always be treated as a text form
	Body_TEXT Body_ContentTypeHint = 1
	// Contents must always be treated as a binary form
	Body_BINARY Body_ContentTypeHint = 2
)

// Enum value maps for Body_ContentTypeHint.
var (
	Body_ContentTypeHint_name = map[int32]string{
		0: "DEFAULT",
		1: "TEXT",
		2: "BINARY",
	}
	Body_ContentTypeHint_value = map[string]int32{
		"DEFAULT": 0,
		"TEXT":    1,
		"BINARY":  2,
	}
)

func (x Body_ContentTypeHint) Enum() *Body_ContentTypeHint {
	p := new(Body_ContentTypeHint)
	*p = x
	return p
}

func (x Body_ContentTypeHint) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Body_ContentTypeHint) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_pact_plugin_proto_enumTypes[1].Descriptor()
}

func (Body_ContentTypeHint) Type() protoreflect.EnumType {
	return &file_proto_pact_plugin_proto_enumTypes[1]
}

func (x Body_ContentTypeHint) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Body_ContentTypeHint.Descriptor instead.
func (Body_ContentTypeHint) EnumDescriptor() ([]byte, []int) {
	return file_proto_pact_plugin_proto_rawDescGZIP(), []int{4, 0}
}

// Type of markup used
type InteractionResponse_MarkupType int32

const (
	// CommonMark format
	InteractionResponse_COMMON_MARK InteractionResponse_MarkupType = 0
	// HTML format
	InteractionResponse_HTML InteractionResponse_MarkupType = 1
)

// Enum value maps for InteractionResponse_MarkupType.
var (
	InteractionResponse_MarkupType_name = map[int32]string{
		0: "COMMON_MARK",
		1: "HTML",
	}
	InteractionResponse_MarkupType_value = map[string]int32{
		"COMMON_MARK": 0,
		"HTML":        1,
	}
)

func (x InteractionResponse_MarkupType) Enum() *InteractionResponse_MarkupType {
	p := new(InteractionResponse_MarkupType)
	*p = x
	return p
}

func (x InteractionResponse_MarkupType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InteractionResponse_MarkupType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_pact_plugin_proto_enumTypes[2].Descriptor()
}

func (InteractionResponse_MarkupType) Type() protoreflect.EnumType {
	return &file_proto_pact_plugin_proto_enumTypes[2]
}

func (x InteractionResponse_MarkupType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InteractionResponse_MarkupType.Descriptor instead.
func (InteractionResponse_MarkupType) EnumDescriptor() ([]byte, []int) {
	return file_proto_pact_plugin_proto_rawDescGZIP(), []int{15, 0}
}

// The mode of the generation, if running from a consumer test or during provider verification
type GenerateContentRequest_TestMode int32

const (
	GenerateContentRequest_Unknown GenerateContentRequest_TestMode = 0
	// Running on the consumer side
	GenerateContentRequest_Consumer GenerateContentRequest_TestMode = 1
	// Running on the provider side
	GenerateContentRequest_Provider GenerateContentRequest_TestMode = 2
)

// Enum value maps for GenerateContentRequest_TestMode.
var (
	GenerateContentRequest_TestMode_name = map[int32]string{
		0: "Unknown",
		1: "Consumer",
		2: "Provider",
	}
	GenerateContentRequest_TestMode_value = map[string]int32{
		"Unknown":  0,
		"Consumer": 1,
		"Provider": 2,
	}
)

func (x GenerateContentRequest_TestMode) Enum() *GenerateContentRequest_TestMode {
	p := new(GenerateContentRequest_TestMode)
	*p = x
	return p
}

func (x GenerateContentRequest_TestMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GenerateContentRequest_TestMode) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_pact_plugin_proto_enumTypes[3].Descriptor()
}

func (GenerateContentRequest_TestMode) Type() protoreflect.EnumType {
	return &file_proto_pact_plugin_proto_enumTypes[3]
}

func (x GenerateContentRequest_TestMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GenerateContentRequest_TestMode.Descriptor instead.
func (GenerateContentRequest_TestMode) EnumDescriptor() ([]byte, []int) {
	return file_proto_pact_plugin_proto_rawDescGZIP(), []int{17, 0}
}

// Which part the content is for
type GenerateContentRequest_ContentFor int32

const (
	GenerateContentRequest_Request  GenerateContentRequest_ContentFor = 0
	GenerateContentRequest_Response GenerateContentRequest_ContentFor = 1
)

// Enum value maps for GenerateContentRequest_ContentFor.
var (
	GenerateContentRequest_ContentFor_name = map[int32]string{
		0: "Request",
		1: "Response",
	}
	GenerateContentRequest_ContentFor_value = map[string]int32{
		"Request":  0,
		"Response": 1,
	}
)

func (x GenerateContentRequest_ContentFor) Enum() *GenerateContentRequest_ContentFor {
	p := new(GenerateContentRequest_ContentFor)
	*p = x
	return p
}

func (x GenerateContentRequest_ContentFor) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GenerateContentRequest_ContentFor) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_pact_plugin_proto_enumTypes[4].Descriptor()
}

func (GenerateContentRequest_ContentFor) Type() protoreflect.EnumType {
	return &file_proto_pact_plugin_proto_enumTypes[4]
}

func (x GenerateContentRequest_ContentFor) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GenerateContentRequest_ContentFor.Descriptor instead.
func (GenerateContentRequest_ContentFor) EnumDescriptor() ([]byte, []int) {
	return file_proto_pact_plugin_proto_rawDescGZIP(), []int{17, 1}
}

// Request to verify the plugin has loaded OK
type InitPluginRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Implementation calling the plugin
	Implementation string `protobuf:"bytes,1,opt,name=implementation,proto3" json:"implementation,omitempty"`
	// Version of the implementation
	Version       string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitPluginRequest) Reset() {
	*x = InitPluginRequest{}
	mi := &file_proto_pact_plugin_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitPluginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitPluginRequest) ProtoMessage() {}

func (x *InitPluginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pact_plugin_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitPluginRequest.ProtoReflect.Descriptor instead.
func (*InitPluginRequest) Descriptor() ([]byte, []int) {
	return file_proto_pact_plugin_proto_rawDescGZIP(), []int{0}
}

func (x *InitPluginRequest) GetImplementation() string {
	if x != nil {
		return x.Implementation
	}
	return ""
}

func (x *InitPluginRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// Entry to be added to the core catalogue. Each entry describes one of the features the plugin provides.
// Entries will be stored in the catalogue under the key "plugin/$name/$type/$key".
type CatalogueEntry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Entry type
	Type CatalogueEntry_EntryType `protobuf:"varint,1,opt,name=type,proto3,enum=io.pact.plugin.CatalogueEntry_EntryType" json:"type,omitempty"`
	// Entry key
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// Associated data required for the entry. For CONTENT_MATCHER and CONTENT_GENERATOR types, a "content-types"
	// value (separated by semi-colons) is required for all the content types the plugin supports.
	Values        map[string]string `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CatalogueEntry) Reset() {
	*x = CatalogueEntry{}
	mi := &file_proto_pact_plugin_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CatalogueEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatalogueEntry) ProtoMessage() {}

func (x *CatalogueEntry) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pact_plugin_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatalogueEntry.ProtoReflect.Descriptor instead.
func (*CatalogueEntry) Descriptor() ([]byte, []int) {
	return file_proto_pact_plugin_proto_rawDescGZIP(), []int{1}
}

func (x *CatalogueEntry) GetType() CatalogueEntry_EntryType {
	if x != nil {
		return x.Type
	}
	return CatalogueEntry_CONTENT_MATCHER
}

func (x *CatalogueEntry) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *CatalogueEntry) GetValues() map[string]string {
	if x != nil {
		return x.Values
	}
	return nil
}

// Response to init plugin, providing the catalogue entries the plugin provides
type InitPluginResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of entries the plugin supports
	Catalogue     []*CatalogueEntry `protobuf:"bytes,1,rep,name=catalogue,proto3" json:"catalogue,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitPluginResponse) Reset() {
	*x = InitPluginResponse{}
	mi := &file_proto_pact_plugin_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitPluginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitPluginResponse) ProtoMessage() {}

func (x *InitPluginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pact_plugin_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitPluginResponse.ProtoReflect.Descriptor instead.
func (*InitPluginResponse) Descriptor() ([]byte, []int) {
	return file_proto_pact_plugin_proto_rawDescGZIP(), []int{2}
}

func (x *InitPluginResponse) GetCatalogue() []*CatalogueEntry {
	if x != nil {
		return x.Catalogue
	}
	return nil
}

// Catalogue of Core Pact + Plugin features
type Catalogue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of entries from the core catalogue
	Catalogue     []*CatalogueEntry `protobuf:"bytes,1,rep,name=catalogue,proto3" json:"catalogue,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Catalogue) Reset() {
	*x = Catalogue{}
	mi := &file_proto_pact_plugin_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Catalogue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Catalogue) ProtoMessage() {}

func (x *Catalogue) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pact_plugin_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Catalogue.ProtoReflect.Descriptor instead.
func (*Catalogue) Descriptor() ([]byte, []int) {
	return file_proto_pact_plugin_proto_rawDescGZIP(), []int{3}
}

func (x *Catalogue) GetCatalogue() []*CatalogueEntry {
	if x != nil {
		return x.Catalogue
	}
	return nil
}

// Message representing a request, response or message body
type Body struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The content type of the body in MIME format (i.e. application/json)
	ContentType string `protobuf:"bytes,1,opt,name=contentType,proto3" json:"contentType,omitempty"`
	// Bytes of the actual content
	Content *wrapperspb.BytesValue `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	// Content type override to apply (if required). If omitted, the default rules of the Pact implementation
	// will be used
	ContentTypeHint Body_ContentTypeHint `protobuf:"varint,3,opt,name=contentTypeHint,proto3,enum=io.pact.plugin.Body_ContentTypeHint" json:"contentTypeHint,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Body) Reset() {
	*x = Body{}
	mi := &file_proto_pact_plugin_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Body) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Body) ProtoMessage() {}

func (x *Body) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pact_plugin_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Body.ProtoReflect.Descriptor instead.
func (*Body) Descriptor() ([]byte, []int) {
	return file_proto_pact_plugin_proto_rawDescGZIP(), []int{4}
}

func (x *Body) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *Body) GetContent() *wrapperspb.BytesValue {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *Body) GetContentTypeHint() Body_ContentTypeHint {
	if x != nil {
		return x.ContentTypeHint
	}
	return Body_DEFAULT
}

// Request to preform a comparison on an actual body given the expected one
type CompareContentsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Expected body from the Pact interaction
	Expected *Body `protobuf:"bytes,1,opt,name=expected,proto3" json:"expected,omitempty"`
	// Actual received body
	Actual *Body `protobuf:"bytes,2,opt,name=actual,proto3" json:"actual,omitempty"`
	// If unexpected keys or attributes should be allowed. Setting this to false results in additional keys or fields
	// will cause a mismatch
	AllowUnexpectedKeys bool `protobuf:"varint,3,opt,name=allow_unexpected_keys,json=allowUnexpectedKeys,proto3" json:"allow_unexpected_keys,omitempty"`
	// Map of expressions to matching rules. The expressions follow the documented Pact matching rule expressions
	Rules map[string]*MatchingRules `protobuf:"bytes,4,rep,name=rules,proto3" json:"rules,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Additional data added to the Pact/Interaction by the plugin
	PluginConfiguration *PluginConfiguration `protobuf:"bytes,5,opt,name=pluginConfiguration,proto3" json:"pluginConfiguration,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CompareContentsRequest) Reset() {
	*x = CompareContentsRequest{}
	mi := &file_proto_pact_plugin_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompareContentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompareContentsRequest) ProtoMessage() {}

func (x *CompareContentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pact_plugin_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompareContentsRequest.ProtoReflect.Descriptor instead.
func (*CompareContentsRequest) Descriptor() ([]byte, []int) {
	return file_proto_pact_plugin_proto_rawDescGZIP(), []int{5}
}

func (x *CompareContentsRequest) GetExpected() *Body {
	if x != nil {
		return x.Expected
	}
	return nil
}

func (x *CompareContentsRequest) GetActual() *Body {
	if x != nil {
		return x.Actual
	}
	return nil
}

func (x *CompareContentsRequest) GetAllowUnexpectedKeys() bool {
	if x != nil {
		return x.AllowUnexpectedKeys
	}
	return false
}

func (x *CompareContentsRequest) GetRules() map[string]*MatchingRules {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *CompareContentsRequest) GetPluginConfiguration() *PluginConfiguration {
	if x != nil {
		return x.PluginConfiguration
	}
	return nil
}

// Indicates that there was a mismatch with the content type
type ContentTypeMismatch struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Expected content type (MIME format)
	Expected string `protobuf:"bytes,1,opt,name=expected,proto3" json:"expected,omitempty"`
	// Actual content type received (MIME format)
	Actual        string `protobuf:"bytes,2,opt,name=actual,proto3" json:"actual,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContentTypeMismatch) Reset() {
	*x = ContentTypeMismatch{}
	mi := &file_proto_pact_plugin_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContentTypeMismatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContentTypeMismatch) ProtoMessage() {}

func (x *ContentTypeMismatch) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pact_plugin_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContentTypeMismatch.ProtoReflect.Descriptor instead.
func (*ContentTypeMismatch) Descriptor() ([]byte, []int) {
	return file_proto_pact_plugin_proto_rawDescGZIP(), []int{6}
}

func (x *ContentTypeMismatch) GetExpected() string {
	if x != nil {
		return x.Expected
	}
	return ""
}

func (x *ContentTypeMismatch) GetActual() string {
	if x != nil {
		return x.Actual
	}
	return ""
}

// A mismatch for an particular item of content
type ContentMismatch struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Expected data bytes
	Expected *wrapperspb.BytesValue `protobuf:"bytes,1,opt,name=expected,proto3" json:"expected,omitempty"`
	// Actual data bytes
	Actual *wrapperspb.BytesValue `protobuf:"bytes,2,opt,name=actual,proto3" json:"actual,omitempty"`
	// Description of the mismatch
	Mismatch string `protobuf:"bytes,3,opt,name=mismatch,proto3" json:"mismatch,omitempty"`
	// Path to the item that was matched. This is the value as per the documented Pact matching rule expressions.
	Path string `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	// Optional diff of the contents
	Diff string `protobuf:"bytes,5,opt,name=diff,proto3" json:"diff,omitempty"`
	// Part of the interaction that the mismatch is for: body, headers, metadata, etc.
	MismatchType  string `protobuf:"bytes,6,opt,name=mismatchType,proto3" json:"mismatchType,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContentMismatch) Reset() {
	*x = ContentMismatch{}
	mi := &file_proto_pact_plugin_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContentMismatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContentMismatch) ProtoMessage() {}

func (x *ContentMismatch) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pact_plugin_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContentMismatch.ProtoReflect.Descriptor instead.
func (*ContentMismatch) Descriptor() ([]byte, []int) {
	return file_proto_pact_plugin_proto_rawDescGZIP(), []int{7}
}

func (x *ContentMismatch) GetExpected() *wrapperspb.BytesValue {
	if x != nil {
		return x.Expected
	}
	return nil
}

func (x *ContentMismatch) GetActual() *wrapperspb.BytesValue {
	if x != nil {
		return x.Actual
	}
	return nil
}

func (x *ContentMismatch) GetMismatch() string {
	if x != nil {
		return x.Mismatch
	}
	return ""
}

func (x *ContentMismatch) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ContentMismatch) GetDiff() string {
	if x != nil {
		return x.Diff
	}
	return ""
}

func (x *ContentMismatch) GetMismatchType() string {
	if x != nil {
		return x.MismatchType
	}
	return ""
}

// List of content mismatches
type ContentMismatches struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mismatches    []*ContentMismatch     `protobuf:"bytes,1,rep,name=mismatches,proto3" json:"mismatches,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContentMismatches) Reset() {
	*x = ContentMismatches{}
	mi := &file_proto_pact_plugin_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContentMismatches) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContentMismatches) ProtoMessage() {}

func (x *ContentMismatches) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pact_plugin_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContentMismatches.ProtoReflect.Descriptor instead.
func (*ContentMismatches) Descriptor() ([]byte, []int) {
	return file_proto_pact_plugin_proto_rawDescGZIP(), []int{8}
}

func (x *ContentMismatches) GetMismatches() []*ContentMismatch {
	if x != nil {
		return x.Mismatches
	}
	return nil
}

// Response to the CompareContentsRequest with the results of the comparison
type CompareContentsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Error message if an error occurred. If this field is set, the remaining fields will be ignored and the
	// verification marked as failed
	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	// There was a mismatch with the types of content. If this is set, the results may not be set.
	TypeMismatch *ContentTypeMismatch `protobuf:"bytes,2,opt,name=typeMismatch,proto3" json:"typeMismatch,omitempty"`
	// Results of the match, keyed by matching rule expression
	Results       map[string]*ContentMismatches `protobuf:"bytes,3,rep,name=results,proto3" json:"results,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompareContentsResponse) Reset() {
	*x = CompareContentsResponse{}
	mi := &file_proto_pact_plugin_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompareContentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompareContentsResponse) ProtoMessage() {}

func (x *CompareContentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pact_plugin_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompareContentsResponse.ProtoReflect.Descriptor instead.
func (*CompareContentsResponse) Descriptor() ([]byte, []int) {
	return file_proto_pact_plugin_proto_rawDescGZIP(), []int{9}
}

func (x *CompareContentsResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *CompareContentsResponse) GetTypeMismatch() *ContentTypeMismatch {
	if x != nil {
		return x.TypeMismatch
	}
	return nil
}

func (x *CompareContentsResponse) GetResults() map[string]*ContentMismatches {
	if x != nil {
		return x.Results
	}
	return nil
}

// Request to configure/setup an interaction so that it can be verified later
type ConfigureInteractionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Content type of the interaction (MIME format)
	ContentType string `protobuf:"bytes,1,opt,name=contentType,proto3" json:"contentType,omitempty"`
	// This is data specified by the user in the consumer test
	ContentsConfig *structpb.Struct `protobuf:"bytes,2,opt,name=contentsConfig,proto3" json:"contentsConfig,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ConfigureInteractionRequest) Reset() {
	*x = ConfigureInteractionRequest{}
	mi := &file_proto_pact_plugin_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigureInteractionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureInteractionRequest) ProtoMessage() {}

func (x *ConfigureInteractionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pact_plugin_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureInteractionRequest.ProtoReflect.Descriptor instead.
func (*ConfigureInteractionRequest) Descriptor() ([]byte, []int) {
	return file_proto_pact_plugin_proto_rawDescGZIP(), []int{10}
}

func (x *ConfigureInteractionRequest) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *ConfigureInteractionRequest) GetContentsConfig() *structpb.Struct {
	if x != nil {
		return x.ContentsConfig
	}
	return nil
}

// Represents a matching rule
type MatchingRule struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Type of the matching rule
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Associated data for the matching rule
	Values        *structpb.Struct `protobuf:"bytes,2,opt,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchingRule) Reset() {
	*x = MatchingRule{}
	mi := &file_proto_pact_plugin_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchingRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchingRule) ProtoMessage() {}

func (x *MatchingRule) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pact_plugin_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchingRule.ProtoReflect.Descriptor instead.
func (*MatchingRule) Descriptor() ([]byte, []int) {
	return file_proto_pact_plugin_proto_rawDescGZIP(), []int{11}
}

func (x *MatchingRule) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MatchingRule) GetValues() *structpb.Struct {
	if x != nil {
		return x.Values
	}
	return nil
}

// List of matching rules
type MatchingRules struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rule          []*MatchingRule        `protobuf:"bytes,1,rep,name=rule,proto3" json:"rule,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchingRules) Reset() {
	*x = MatchingRules{}
	mi := &file_proto_pact_plugin_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchingRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchingRules) ProtoMessage() {}

func (x *MatchingRules) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pact_plugin_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchingRules.ProtoReflect.Descriptor instead.
func (*MatchingRules) Descriptor() ([]byte, []int) {
	return file_proto_pact_plugin_proto_rawDescGZIP(), []int{12}
}

func (x *MatchingRules) GetRule() []*MatchingRule {
	if x != nil {
		return x.Rule
	}
	return nil
}

// Example generator
type Generator struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Type of generator
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Associated data for the generator
	Values        *structpb.Struct `protobuf:"bytes,2,opt,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Generator) Reset() {
	*x = Generator{}
	mi := &file_proto_pact_plugin_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Generator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Generator) ProtoMessage() {}

func (x *Generator) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pact_plugin_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Generator.ProtoReflect.Descriptor instead.
func (*Generator) Descriptor() ([]byte, []int) {
	return file_proto_pact_plugin_proto_rawDescGZIP(), []int{13}
}

func (x *Generator) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Generator) GetValues() *structpb.Struct {
	if x != nil {
		return x.Values
	}
	return nil
}

// Plugin configuration added to the pact file by the ConfigureInteraction step
type PluginConfiguration struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Data to be persisted against the interaction
	InteractionConfiguration *structpb.Struct `protobuf:"bytes,1,opt,name=interactionConfiguration,proto3" json:"interactionConfiguration,omitempty"`
	// Data to be persisted in the Pact file metadata (Global data)
	PactConfiguration *structpb.Struct `protobuf:"bytes,2,opt,name=pactConfiguration,proto3" json:"pactConfiguration,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *PluginConfiguration) Reset() {
	*x = PluginConfiguration{}
	mi := &file_proto_pact_plugin_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginConfiguration) ProtoMessage() {}

func (x *PluginConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pact_plugin_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginConfiguration.ProtoReflect.Descriptor instead.
func (*PluginConfiguration) Descriptor() ([]byte, []int) {
	return file_proto_pact_plugin_proto_rawDescGZIP(), []int{14}
}

func (x *PluginConfiguration) GetInteractionConfiguration() *structpb.Struct {
	if x != nil {
		return x.InteractionConfiguration
	}
	return nil
}

func (x *PluginConfiguration) GetPactConfiguration() *structpb.Struct {
	if x != nil {
		return x.PactConfiguration
	}
	return nil
}

// Response to the configure/setup an interaction request
type InteractionResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Contents for the interaction
	Contents *Body `protobuf:"bytes,1,opt,name=contents,proto3" json:"contents,omitempty"`
	// All matching rules to apply
	Rules map[string]*MatchingRules `protobuf:"bytes,2,rep,name=rules,proto3" json:"rules,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Generators to apply
	Generators map[string]*Generator `protobuf:"bytes,3,rep,name=generators,proto3" json:"generators,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// For message interactions, any metadata to be applied
	MessageMetadata *structpb.Struct `protobuf:"bytes,4,opt,name=messageMetadata,proto3" json:"messageMetadata,omitempty"`
	// Plugin specific data to be persisted in the pact file
	PluginConfiguration *PluginConfiguration `protobuf:"bytes,5,opt,name=pluginConfiguration,proto3" json:"pluginConfiguration,omitempty"`
	// Markdown/HTML formatted text representation of the interaction
	InteractionMarkup     string                         `protobuf:"bytes,6,opt,name=interactionMarkup,proto3" json:"interactionMarkup,omitempty"`
	InteractionMarkupType InteractionResponse_MarkupType `protobuf:"varint,7,opt,name=interactionMarkupType,proto3,enum=io.pact.plugin.InteractionResponse_MarkupType" json:"interactionMarkupType,omitempty"`
	// Description of what part this interaction belongs to (in the case of there being more than one, for instance,
	// request/response messages)
	PartName string `protobuf:"bytes,8,opt,name=partName,proto3" json:"partName,omitempty"`
	// All matching rules to apply to any message metadata
	MetadataRules map[string]*MatchingRules `protobuf:"bytes,9,rep,name=metadata_rules,json=metadataRules,proto3" json:"metadata_rules,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Generators to apply to any message metadata
	MetadataGenerators map[string]*Generator `protobuf:"bytes,10,rep,name=metadata_generators,json=metadataGenerators,proto3" json:"metadata_generators,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *InteractionResponse) Reset() {
	*x = InteractionResponse{}
	mi := &file_proto_pact_plugin_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InteractionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractionResponse) ProtoMessage() {}

func (x *InteractionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pact_plugin_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractionResponse.ProtoReflect.Descriptor instead.
func (*InteractionResponse) Descriptor() ([]byte, []int) {
	return file_proto_pact_plugin_proto_rawDescGZIP(), []int{15}
}

func (x *InteractionResponse) GetContents() *Body {
	if x != nil {
		return x.Contents
	}
	return nil
}

func (x *InteractionResponse) GetRules() map[string]*MatchingRules {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *InteractionResponse) GetGenerators() map[string]*Generator {
	if x != nil {
		return x.Generators
	}
	return nil
}

func (x *InteractionResponse) GetMessageMetadata() *structpb.Struct {
	if x != nil {
		return x.MessageMetadata
	}
	return nil
}

func (x *InteractionResponse) GetPluginConfiguration() *PluginConfiguration {
	if x != nil {
		return x.PluginConfiguration
	}
	return nil
}

func (x *InteractionResponse) GetInteractionMarkup() string {
	if x != nil {
		return x.InteractionMarkup
	}
	return ""
}

func (x *InteractionResponse) GetInteractionMarkupType() InteractionResponse_MarkupType {
	if x != nil {
		return x.InteractionMarkupType
	}
	return InteractionResponse_COMMON_MARK
}

func (x *InteractionResponse) GetPartName() string {
	if x != nil {
		return x.PartName
	}
	return ""
}

func (x *InteractionResponse) GetMetadataRules() map[string]*MatchingRules {
	if x != nil {
		return x.MetadataRules
	}
	return nil
}

func (x *InteractionResponse) GetMetadataGenerators() map[string]*Generator {
	if x != nil {
		return x.MetadataGenerators
	}
	return nil
}

// Response to the configure/setup an interaction request
type ConfigureInteractionResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If an error occurred. In this case, the other fields will be ignored/not set
	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	// The actual response if no error occurred.
	Interaction []*InteractionResponse `protobuf:"bytes,2,rep,name=interaction,proto3" json:"interaction,omitempty"`
	// Plugin specific data to be persisted in the pact file
	PluginConfiguration *PluginConfiguration `protobuf:"bytes,3,opt,name=pluginConfiguration,proto3" json:"pluginConfiguration,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ConfigureInteractionResponse) Reset() {
	*x = ConfigureInteractionResponse{}
	mi := &file_proto_pact_plugin_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigureInteractionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureInteractionResponse) ProtoMessage() {}

func (x *ConfigureInteractionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pact_plugin_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureInteractionResponse.ProtoReflect.Descriptor instead.
func (*ConfigureInteractionResponse) Descriptor() ([]byte, []int) {
	return file_proto_pact_plugin_proto_rawDescGZIP(), []int{16}
}

func (x *ConfigureInteractionResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ConfigureInteractionResponse) GetInteraction() []*InteractionResponse {
	if x != nil {
		return x.Interaction
	}
	return nil
}

func (x *ConfigureInteractionResponse) GetPluginConfiguration() *PluginConfiguration {
	if x != nil {
		return x.PluginConfiguration
	}
	return nil
}

// Request to generate the contents using any defined generators
type GenerateContentRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Original contents
	Contents *Body `protobuf:"bytes,1,opt,name=contents,proto3" json:"contents,omitempty"`
	// Generators to apply
	Generators map[string]*Generator `protobuf:"bytes,2,rep,name=generators,proto3" json:"generators,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Additional data added to the Pact/Interaction by the plugin
	PluginConfiguration *PluginConfiguration `protobuf:"bytes,3,opt,name=pluginConfiguration,proto3" json:"pluginConfiguration,omitempty"`
	// Context data provided by the test framework
	TestContext   *structpb.Struct                  `protobuf:"bytes,4,opt,name=testContext,proto3" json:"testContext,omitempty"`
	TestMode      GenerateContentRequest_TestMode   `protobuf:"varint,5,opt,name=testMode,proto3,enum=io.pact.plugin.GenerateContentRequest_TestMode" json:"testMode,omitempty"`
	ContentFor    GenerateContentRequest_ContentFor `protobuf:"varint,6,opt,name=contentFor,proto3,enum=io.pact.plugin.GenerateContentRequest_ContentFor" json:"contentFor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateContentRequest) Reset() {
	*x = GenerateContentRequest{}
	mi := &file_proto_pact_plugin_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateContentRequest) ProtoMessage() {}

func (x *GenerateContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pact_plugin_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateContentRequest.ProtoReflect.Descriptor instead.
func (*GenerateContentRequest) Descriptor() ([]byte, []int) {
	return file_proto_pact_plugin_proto_rawDescGZIP(), []int{17}
}

func (x *GenerateContentRequest) GetContents() *Body {
	if x != nil {
		return x.Contents
	}
	return nil
}

func (x *GenerateContentRequest) GetGenerators() map[string]*Generator {
	if x != nil {
		return x.Generators
	}
	return nil
}

func (x *GenerateContentRequest) GetPluginConfiguration() *PluginConfiguration {
	if x != nil {
		return x.PluginConfiguration
	}
	return nil
}

func (x *GenerateContentRequest) GetTestContext() *structpb.Struct {
	if x != nil {
		return x.TestContext
	}
	return nil
}

func (x *GenerateContentRequest) GetTestMode() GenerateContentRequest_TestMode {
	if x != nil {
		return x.TestMode
	}
	return GenerateContentRequest_Unknown
}

func (x *GenerateContentRequest) GetContentFor() GenerateContentRequest_ContentFor {
	if x != nil {
		return x.ContentFor
	}
	return GenerateContentRequest_Request
}

// Generated body/message response
type GenerateContentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Contents      *Body                  `protobuf:"bytes,1,opt,name=contents,proto3" json:"contents,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateContentResponse) Reset() {
	*x = GenerateContentResponse{}
	mi := &file_proto_pact_plugin_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateContentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateContentResponse) ProtoMessage() {}

func (x *GenerateContentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pact_plugin_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateContentResponse.ProtoReflect.Descriptor instead.
func (*GenerateContentResponse) Descriptor() ([]byte, []int) {
	return file_proto_pact_plugin_proto_rawDescGZIP(), []int{18}
}

func (x *GenerateContentResponse) GetContents() *Body {
	if x != nil {
		return x.Contents
	}
	return nil
}

// Request to start a mock server
type StartMockServerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Interface to bind to. Will default to the loopback adapter
	HostInterface string `protobuf:"bytes,1,opt,name=hostInterface,proto3" json:"hostInterface,omitempty"`
	// Port to bind to. Default (or a value of 0) get the OS to open a random port
	Port uint32 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	// If TLS should be used (if supported by the mock server)
	Tls bool `protobuf:"varint,3,opt,name=tls,proto3" json:"tls,omitempty"`
	// Pact as JSON to use for the mock server behaviour
	Pact string `protobuf:"bytes,4,opt,name=pact,proto3" json:"pact,omitempty"`
	// Context data provided by the test framework
	TestContext   *structpb.Struct `protobuf:"bytes,5,opt,name=testContext,proto3" json:"testContext,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartMockServerRequest) Reset() {
	*x = StartMockServerRequest{}
	mi := &file_proto_pact_plugin_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartMockServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartMockServerRequest) ProtoMessage() {}

func (x *StartMockServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pact_plugin_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartMockServerRequest.ProtoReflect.Descriptor instead.
func (*StartMockServerRequest) Descriptor() ([]byte, []int) {
	return file_proto_pact_plugin_proto_rawDescGZIP(), []int{19}
}

func (x *StartMockServerRequest) GetHostInterface() string {
	if x != nil {
		return x.HostInterface
	}
	return ""
}

func (x *StartMockServerRequest) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *StartMockServerRequest) GetTls() bool {
	if x != nil {
		return x.Tls
	}
	return false
}

func (x *StartMockServerRequest) GetPact() string {
	if x != nil {
		return x.Pact
	}
	return ""
}

func (x *StartMockServerRequest) GetTestContext() *structpb.Struct {
	if x != nil {
		return x.TestContext
	}
	return nil
}

// Response to the start mock server request
type StartMockServerResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Response:
	//
	//	*StartMockServerResponse_Error
	//	*StartMockServerResponse_Details
	Response      isStartMockServerResponse_Response `protobuf_oneof:"response"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartMockServerResponse) Reset() {
	*x = StartMockServerResponse{}
	mi := &file_proto_pact_plugin_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartMockServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartMockServerResponse) ProtoMessage() {}

func (x *StartMockServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pact_plugin_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartMockServerResponse.ProtoReflect.Descriptor instead.
func (*StartMockServerResponse) Descriptor() ([]byte, []int) {
	return file_proto_pact_plugin_proto_rawDescGZIP(), []int{20}
}

func (x *StartMockServerResponse) GetResponse() isStartMockServerResponse_Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *StartMockServerResponse) GetError() string {
	if x != nil {
		if x, ok := x.Response.(*StartMockServerResponse_Error); ok {
			return x.Error
		}
	}
	return ""
}

func (x *StartMockServerResponse) GetDetails() *MockServerDetails {
	if x != nil {
		if x, ok := x.Response.(*StartMockServerResponse_Details); ok {
			return x.Details
		}
	}
	return nil
}

type isStartMockServerResponse_Response interface {
	isStartMockServerResponse_Response()
}

type StartMockServerResponse_Error struct {
	// If an error occurred
	Error string `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type StartMockServerResponse_Details struct {
	// Mock server details
	Details *MockServerDetails `protobuf:"bytes,2,opt,name=details,proto3,oneof"`
}

func (*StartMockServerResponse_Error) isStartMockServerResponse_Response() {}

func (*StartMockServerResponse_Details) isStartMockServerResponse_Response() {}

// Details on a running mock server
type MockServerDetails struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Mock server unique ID
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Port the mock server is running on
	Port uint32 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	// IP address the mock server is bound to. Probably an IP6 address, but may be IP4
	Address       string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MockServerDetails) Reset() {
	*x = MockServerDetails{}
	mi := &file_proto_pact_plugin_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MockServerDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MockServerDetails) ProtoMessage() {}

func (x *MockServerDetails) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pact_plugin_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MockServerDetails.ProtoReflect.Descriptor instead.
func (*MockServerDetails) Descriptor() ([]byte, []int) {
	return file_proto_pact_plugin_proto_rawDescGZIP(), []int{21}
}

func (x *MockServerDetails) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *MockServerDetails) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *MockServerDetails) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// Request to shut down a running mock server
// TODO: replace this with MockServerRequest in the next major version
type ShutdownMockServerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The server ID to shutdown
	ServerKey     string `protobuf:"bytes,1,opt,name=serverKey,proto3" json:"serverKey,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShutdownMockServerRequest) Reset() {
	*x = ShutdownMockServerRequest{}
	mi := &file_proto_pact_plugin_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShutdownMockServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutdownMockServerRequest) ProtoMessage() {}

func (x *ShutdownMockServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pact_plugin_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutdownMockServerRequest.ProtoReflect.Descriptor instead.
func (*ShutdownMockServerRequest) Descriptor() ([]byte, []int) {
	return file_proto_pact_plugin_proto_rawDescGZIP(), []int{22}
}

func (x *ShutdownMockServerRequest) GetServerKey() string {
	if x != nil {
		return x.ServerKey
	}
	return ""
}

// Request for a running mock server by ID
type MockServerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The server ID to shutdown
	ServerKey     string `protobuf:"bytes,1,opt,name=serverKey,proto3" json:"serverKey,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MockServerRequest) Reset() {
	*x = MockServerRequest{}
	mi := &file_proto_pact_plugin_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MockServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MockServerRequest) ProtoMessage() {}

func (x *MockServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pact_plugin_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MockServerRequest.ProtoReflect.Descriptor instead.
func (*MockServerRequest) Descriptor() ([]byte, []int) {
	return file_proto_pact_plugin_proto_rawDescGZIP(), []int{23}
}

func (x *MockServerRequest) GetServerKey() string {
	if x != nil {
		return x.ServerKey
	}
	return ""
}

// Result of a request that the mock server received
type MockServerResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// service + method that was requested
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// If an error occurred trying to handle the request
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// Any mismatches that occurred
	Mismatches    []*ContentMismatch `protobuf:"bytes,3,rep,name=mismatches,proto3" json:"mismatches,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MockServerResult) Reset() {
	*x = MockServerResult{}
	mi := &file_proto_pact_plugin_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MockServerResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MockServerResult) ProtoMessage() {}

func (x *MockServerResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pact_plugin_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MockServerResult.ProtoReflect.Descriptor instead.
func (*MockServerResult) Descriptor() ([]byte, []int) {
	return file_proto_pact_plugin_proto_rawDescGZIP(), []int{24}
}

func (x *MockServerResult) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *MockServerResult) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *MockServerResult) GetMismatches() []*ContentMismatch {
	if x != nil {
		return x.Mismatches
	}
	return nil
}

// Response to the shut down mock server request
// TODO: replace this with MockServerResults in the next major version
type ShutdownMockServerResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If the mock status is all ok
	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	// The results of the test run, will contain an entry for each request received by the mock server
	Results       []*MockServerResult `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShutdownMockServerResponse) Reset() {
	*x = ShutdownMockServerResponse{}
	mi := &file_proto_pact_plugin_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShutdownMockServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutdownMockServerResponse) ProtoMessage() {}

func (x *ShutdownMockServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pact_plugin_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutdownMockServerResponse.ProtoReflect.Descriptor instead.
func (*ShutdownMockServerResponse) Descriptor() ([]byte, []int) {
	return file_proto_pact_plugin_proto_rawDescGZIP(), []int{25}
}

func (x *ShutdownMockServerResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *ShutdownMockServerResponse) GetResults() []*MockServerResult {
	if x != nil {
		return x.Results
	}
	return nil
}

// Matching results of the mock server.
type MockServerResults struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If the mock status is all ok
	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	// The results of the test run, will contain an entry for each request received by the mock server
	Results       []*MockServerResult `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MockServerResults) Reset() {
	*x = MockServerResults{}
	mi := &file_proto_pact_plugin_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MockServerResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MockServerResults) ProtoMessage() {}

func (x *MockServerResults) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pact_plugin_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MockServerResults.ProtoReflect.Descriptor instead.
func (*MockServerResults) Descriptor() ([]byte, []int) {
	return file_proto_pact_plugin_proto_rawDescGZIP(), []int{26}
}

func (x *MockServerResults) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *MockServerResults) GetResults() []*MockServerResult {
	if x != nil {
		return x.Results
	}
	return nil
}

// Request to prepare an interaction for verification
type VerificationPreparationRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Pact as JSON to use for the verification
	Pact string `protobuf:"bytes,1,opt,name=pact,proto3" json:"pact,omitempty"`
	// Interaction key for the interaction from the Pact that is being verified
	InteractionKey string `protobuf:"bytes,2,opt,name=interactionKey,proto3" json:"interactionKey,omitempty"`
	// Any data supplied by the user to verify the interaction
	Config        *structpb.Struct `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerificationPreparationRequest) Reset() {
	*x = VerificationPreparationRequest{}
	mi := &file_proto_pact_plugin_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerificationPreparationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerificationPreparationRequest) ProtoMessage() {}

func (x *VerificationPreparationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pact_plugin_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerificationPreparationRequest.ProtoReflect.Descriptor instead.
func (*VerificationPreparationRequest) Descriptor() ([]byte, []int) {
	return file_proto_pact_plugin_proto_rawDescGZIP(), []int{27}
}

func (x *VerificationPreparationRequest) GetPact() string {
	if x != nil {
		return x.Pact
	}
	return ""
}

func (x *VerificationPreparationRequest) GetInteractionKey() string {
	if x != nil {
		return x.InteractionKey
	}
	return ""
}

func (x *VerificationPreparationRequest) GetConfig() *structpb.Struct {
	if x != nil {
		return x.Config
	}
	return nil
}

// Request metadata value. Will either be a JSON-like value, or binary data
type MetadataValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Value:
	//
	//	*MetadataValue_NonBinaryValue
	//	*MetadataValue_BinaryValue
	Value         isMetadataValue_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetadataValue) Reset() {
	*x = MetadataValue{}
	mi := &file_proto_pact_plugin_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetadataValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataValue) ProtoMessage() {}

func (x *MetadataValue) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pact_plugin_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataValue.ProtoReflect.Descriptor instead.
func (*MetadataValue) Descriptor() ([]byte, []int) {
	return file_proto_pact_plugin_proto_rawDescGZIP(), []int{28}
}

func (x *MetadataValue) GetValue() isMetadataValue_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *MetadataValue) GetNonBinaryValue() *structpb.Value {
	if x != nil {
		if x, ok := x.Value.(*MetadataValue_NonBinaryValue); ok {
			return x.NonBinaryValue
		}
	}
	return nil
}

func (x *MetadataValue) GetBinaryValue() []byte {
	if x != nil {
		if x, ok := x.Value.(*MetadataValue_BinaryValue); ok {
			return x.BinaryValue
		}
	}
	return nil
}

type isMetadataValue_Value interface {
	isMetadataValue_Value()
}

type MetadataValue_NonBinaryValue struct {
	NonBinaryValue *structpb.Value `protobuf:"bytes,1,opt,name=nonBinaryValue,proto3,oneof"`
}

type MetadataValue_BinaryValue struct {
	BinaryValue []byte `protobuf:"bytes,2,opt,name=binaryValue,proto3,oneof"`
}

func (*MetadataValue_NonBinaryValue) isMetadataValue_Value() {}

func (*MetadataValue_BinaryValue) isMetadataValue_Value() {}

// Interaction request data to be sent or received for verification
type InteractionData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request/Response body as bytes
	Body *Body `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	// Metadata associated with the request/response
	Metadata      map[string]*MetadataValue `protobuf:"bytes,2,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InteractionData) Reset() {
	*x = InteractionData{}
	mi := &file_proto_pact_plugin_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InteractionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractionData) ProtoMessage() {}

func (x *InteractionData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pact_plugin_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractionData.ProtoReflect.Descriptor instead.
func (*InteractionData) Descriptor() ([]byte, []int) {
	return file_proto_pact_plugin_proto_rawDescGZIP(), []int{29}
}

func (x *InteractionData) GetBody() *Body {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *InteractionData) GetMetadata() map[string]*MetadataValue {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Response for the prepare an interaction for verification request
type VerificationPreparationResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Response:
	//
	//	*VerificationPreparationResponse_Error
	//	*VerificationPreparationResponse_InteractionData
	Response      isVerificationPreparationResponse_Response `protobuf_oneof:"response"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerificationPreparationResponse) Reset() {
	*x = VerificationPreparationResponse{}
	mi := &file_proto_pact_plugin_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerificationPreparationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerificationPreparationResponse) ProtoMessage() {}

func (x *VerificationPreparationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pact_plugin_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerificationPreparationResponse.ProtoReflect.Descriptor instead.
func (*VerificationPreparationResponse) Descriptor() ([]byte, []int) {
	return file_proto_pact_plugin_proto_rawDescGZIP(), []int{30}
}

func (x *VerificationPreparationResponse) GetResponse() isVerificationPreparationResponse_Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *VerificationPreparationResponse) GetError() string {
	if x != nil {
		if x, ok := x.Response.(*VerificationPreparationResponse_Error); ok {
			return x.Error
		}
	}
	return ""
}

func (x *VerificationPreparationResponse) GetInteractionData() *InteractionData {
	if x != nil {
		if x, ok := x.Response.(*VerificationPreparationResponse_InteractionData); ok {
			return x.InteractionData
		}
	}
	return nil
}

type isVerificationPreparationResponse_Response interface {
	isVerificationPreparationResponse_Response()
}

type VerificationPreparationResponse_Error struct {
	// If an error occurred
	Error string `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type VerificationPreparationResponse_InteractionData struct {
	// Interaction data required to construct any request
	InteractionData *InteractionData `protobuf:"bytes,2,opt,name=interactionData,proto3,oneof"`
}

func (*VerificationPreparationResponse_Error) isVerificationPreparationResponse_Response() {}

func (*VerificationPreparationResponse_InteractionData) isVerificationPreparationResponse_Response() {
}

// Request data to verify an interaction
type VerifyInteractionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Interaction data required to construct the request
	InteractionData *InteractionData `protobuf:"bytes,1,opt,name=interactionData,proto3" json:"interactionData,omitempty"`
	// Any data supplied by the user to verify the interaction
	Config *structpb.Struct `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	// Pact as JSON to use for the verification
	Pact string `protobuf:"bytes,3,opt,name=pact,proto3" json:"pact,omitempty"`
	// Interaction key for the interaction from the Pact that is being verified
	InteractionKey string `protobuf:"bytes,4,opt,name=interactionKey,proto3" json:"interactionKey,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *VerifyInteractionRequest) Reset() {
	*x = VerifyInteractionRequest{}
	mi := &file_proto_pact_plugin_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyInteractionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyInteractionRequest) ProtoMessage() {}

func (x *VerifyInteractionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pact_plugin_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyInteractionRequest.ProtoReflect.Descriptor instead.
func (*VerifyInteractionRequest) Descriptor() ([]byte, []int) {
	return file_proto_pact_plugin_proto_rawDescGZIP(), []int{31}
}

func (x *VerifyInteractionRequest) GetInteractionData() *InteractionData {
	if x != nil {
		return x.InteractionData
	}
	return nil
}

func (x *VerifyInteractionRequest) GetConfig() *structpb.Struct {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *VerifyInteractionRequest) GetPact() string {
	if x != nil {
		return x.Pact
	}
	return ""
}

func (x *VerifyInteractionRequest) GetInteractionKey() string {
	if x != nil {
		return x.InteractionKey
	}
	return ""
}

type VerificationResultItem struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Result:
	//
	//	*VerificationResultItem_Error
	//	*VerificationResultItem_Mismatch
	Result        isVerificationResultItem_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerificationResultItem) Reset() {
	*x = VerificationResultItem{}
	mi := &file_proto_pact_plugin_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerificationResultItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerificationResultItem) ProtoMessage() {}

func (x *VerificationResultItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pact_plugin_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerificationResultItem.ProtoReflect.Descriptor instead.
func (*VerificationResultItem) Descriptor() ([]byte, []int) {
	return file_proto_pact_plugin_proto_rawDescGZIP(), []int{32}
}

func (x *VerificationResultItem) GetResult() isVerificationResultItem_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *VerificationResultItem) GetError() string {
	if x != nil {
		if x, ok := x.Result.(*VerificationResultItem_Error); ok {
			return x.Error
		}
	}
	return ""
}

func (x *VerificationResultItem) GetMismatch() *ContentMismatch {
	if x != nil {
		if x, ok := x.Result.(*VerificationResultItem_Mismatch); ok {
			return x.Mismatch
		}
	}
	return nil
}

type isVerificationResultItem_Result interface {
	isVerificationResultItem_Result()
}

type VerificationResultItem_Error struct {
	Error string `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type VerificationResultItem_Mismatch struct {
	Mismatch *ContentMismatch `protobuf:"bytes,2,opt,name=mismatch,proto3,oneof"`
}

func (*VerificationResultItem_Error) isVerificationResultItem_Result() {}

func (*VerificationResultItem_Mismatch) isVerificationResultItem_Result() {}

// Result of running the verification
type VerificationResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Was the verification successful?
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Interaction data retrieved from the provider (optional)
	ResponseData *InteractionData `protobuf:"bytes,2,opt,name=responseData,proto3" json:"responseData,omitempty"`
	// Any mismatches that occurred
	Mismatches []*VerificationResultItem `protobuf:"bytes,3,rep,name=mismatches,proto3" json:"mismatches,omitempty"`
	// Output for the verification to display to the user
	Output        []string `protobuf:"bytes,4,rep,name=output,proto3" json:"output,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerificationResult) Reset() {
	*x = VerificationResult{}
	mi := &file_proto_pact_plugin_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerificationResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerificationResult) ProtoMessage() {}

func (x *VerificationResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pact_plugin_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerificationResult.ProtoReflect.Descriptor instead.
func (*VerificationResult) Descriptor() ([]byte, []int) {
	return file_proto_pact_plugin_proto_rawDescGZIP(), []int{33}
}

func (x *VerificationResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *VerificationResult) GetResponseData() *InteractionData {
	if x != nil {
		return x.ResponseData
	}
	return nil
}

func (x *VerificationResult) GetMismatches() []*VerificationResultItem {
	if x != nil {
		return x.Mismatches
	}
	return nil
}

func (x *VerificationResult) GetOutput() []string {
	if x != nil {
		return x.Output
	}
	return nil
}

// Result of running the verification
type VerifyInteractionResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Response:
	//
	//	*VerifyInteractionResponse_Error
	//	*VerifyInteractionResponse_Result
	Response      isVerifyInteractionResponse_Response `protobuf_oneof:"response"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyInteractionResponse) Reset() {
	*x = VerifyInteractionResponse{}
	mi := &file_proto_pact_plugin_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyInteractionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyInteractionResponse) ProtoMessage() {}

func (x *VerifyInteractionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pact_plugin_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyInteractionResponse.ProtoReflect.Descriptor instead.
func (*VerifyInteractionResponse) Descriptor() ([]byte, []int) {
	return file_proto_pact_plugin_proto_rawDescGZIP(), []int{34}
}

func (x *VerifyInteractionResponse) GetResponse() isVerifyInteractionResponse_Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *VerifyInteractionResponse) GetError() string {
	if x != nil {
		if x, ok := x.Response.(*VerifyInteractionResponse_Error); ok {
			return x.Error
		}
	}
	return ""
}

func (x *VerifyInteractionResponse) GetResult() *VerificationResult {
	if x != nil {
		if x, ok := x.Response.(*VerifyInteractionResponse_Result); ok {
			return x.Result
		}
	}
	return nil
}

type isVerifyInteractionResponse_Response interface {
	isVerifyInteractionResponse_Response()
}

type VerifyInteractionResponse_Error struct {
	// If an error occurred trying to run the verification
	Error string `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type VerifyInteractionResponse_Result struct {
	Result *VerificationResult `protobuf:"bytes,2,opt,name=result,proto3,oneof"`
}

func (*VerifyInteractionResponse_Error) isVerifyInteractionResponse_Response() {}

func (*VerifyInteractionResponse_Result) isVerifyInteractionResponse_Response() {}

var File_proto_pact_plugin_proto protoreflect.FileDescriptor

const file_proto_pact_plugin_proto_rawDesc = "" +
	"\n" +
	"\x17proto/pact_plugin.proto\x12\x0eio.pact.plugin\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1egoogle/protobuf/wrappers.proto\x1a\x1bgoogle/protobuf/empty.proto\"U\n" +
	"\x11InitPluginRequest\x12&\n" +
	"\x0eimplementation\x18\x01 \x01(\tR\x0eimplementation\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\"\xc5\x02\n" +
	"\x0eCatalogueEntry\x12<\n" +
	"\x04type\x18\x01 \x01(\x0e2(.io.pact.plugin.CatalogueEntry.EntryTypeR\x04type\x12\x10\n" +
	"\x03key\x18\x02 \x01(\tR\x03key\x12B\n" +
	"\x06values\x18\x03 \x03(\v2*.io.pact.plugin.CatalogueEntry.ValuesEntryR\x06values\x1a9\n" +
	"\vValuesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"d\n" +
	"\tEntryType\x12\x13\n" +
	"\x0fCONTENT_MATCHER\x10\x00\x12\x15\n" +
	"\x11CONTENT_GENERATOR\x10\x01\x12\r\n" +
	"\tTRANSPORT\x10\x02\x12\v\n" +
	"\aMATCHER\x10\x03\x12\x0f\n" +
	"\vINTERACTION\x10\x04\"R\n" +
	"\x12InitPluginResponse\x12<\n" +
	"\tcatalogue\x18\x01 \x03(\v2\x1e.io.pact.plugin.CatalogueEntryR\tcatalogue\"I\n" +
	"\tCatalogue\x12<\n" +
	"\tcatalogue\x18\x01 \x03(\v2\x1e.io.pact.plugin.CatalogueEntryR\tcatalogue\"\xe5\x01\n" +
	"\x04Body\x12 \n" +
	"\vcontentType\x18\x01 \x01(\tR\vcontentType\x125\n" +
	"\acontent\x18\x02 \x01(\v2\x1b.google.protobuf.BytesValueR\acontent\x12N\n" +
	"\x0fcontentTypeHint\x18\x03 \x01(\x0e2$.io.pact.plugin.Body.ContentTypeHintR\x0fcontentTypeHint\"4\n" +
	"\x0fContentTypeHint\x12\v\n" +
	"\aDEFAULT\x10\x00\x12\b\n" +
	"\x04TEXT\x10\x01\x12\n" +
	"\n" +
	"\x06BINARY\x10\x02\"\xa5\x03\n" +
	"\x16CompareContentsRequest\x120\n" +
	"\bexpected\x18\x01 \x01(\v2\x14.io.pact.plugin.BodyR\bexpected\x12,\n" +
	"\x06actual\x18\x02 \x01(\v2\x14.io.pact.plugin.BodyR\x06actual\x122\n" +
	"\x15allow_unexpected_keys\x18\x03 \x01(\bR\x13allowUnexpectedKeys\x12G\n" +
	"\x05rules\x18\x04 \x03(\v21.io.pact.plugin.CompareContentsRequest.RulesEntryR\x05rules\x12U\n" +
	"\x13pluginConfiguration\x18\x05 \x01(\v2#.io.pact.plugin.PluginConfigurationR\x13pluginConfiguration\x1aW\n" +
	"\n" +
	"RulesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x123\n" +
	"\x05value\x18\x02 \x01(\v2\x1d.io.pact.plugin.MatchingRulesR\x05value:\x028\x01\"I\n" +
	"\x13ContentTypeMismatch\x12\x1a\n" +
	"\bexpected\x18\x01 \x01(\tR\bexpected\x12\x16\n" +
	"\x06actual\x18\x02 \x01(\tR\x06actual\"\xe7\x01\n" +
	"\x0fContentMismatch\x127\n" +
	"\bexpected\x18\x01 \x01(\v2\x1b.google.protobuf.BytesValueR\bexpected\x123\n" +
	"\x06actual\x18\x02 \x01(\v2\x1b.google.protobuf.BytesValueR\x06actual\x12\x1a\n" +
	"\bmismatch\x18\x03 \x01(\tR\bmismatch\x12\x12\n" +
	"\x04path\x18\x04 \x01(\tR\x04path\x12\x12\n" +
	"\x04diff\x18\x05 \x01(\tR\x04diff\x12\"\n" +
	"\fmismatchType\x18\x06 \x01(\tR\fmismatchType\"T\n" +
	"\x11ContentMismatches\x12?\n" +
	"\n" +
	"mismatches\x18\x01 \x03(\v2\x1f.io.pact.plugin.ContentMismatchR\n" +
	"mismatches\"\xa7\x02\n" +
	"\x17CompareContentsResponse\x12\x14\n" +
	"\x05error\x18\x01 \x01(\tR\x05error\x12G\n" +
	"\ftypeMismatch\x18\x02 \x01(\v2#.io.pact.plugin.ContentTypeMismatchR\ftypeMismatch\x12N\n" +
	"\aresults\x18\x03 \x03(\v24.io.pact.plugin.CompareContentsResponse.ResultsEntryR\aresults\x1a]\n" +
	"\fResultsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x127\n" +
	"\x05value\x18\x02 \x01(\v2!.io.pact.plugin.ContentMismatchesR\x05value:\x028\x01\"\x80\x01\n" +
	"\x1bConfigureInteractionRequest\x12 \n" +
	"\vcontentType\x18\x01 \x01(\tR\vcontentType\x12?\n" +
	"\x0econtentsConfig\x18\x02 \x01(\v2\x17.google.protobuf.StructR\x0econtentsConfig\"S\n" +
	"\fMatchingRule\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12/\n" +
	"\x06values\x18\x02 \x01(\v2\x17.google.protobuf.StructR\x06values\"A\n" +
	"\rMatchingRules\x120\n" +
	"\x04rule\x18\x01 \x03(\v2\x1c.io.pact.plugin.MatchingRuleR\x04rule\"P\n" +
	"\tGenerator\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12/\n" +
	"\x06values\x18\x02 \x01(\v2\x17.google.protobuf.StructR\x06values\"\xb1\x01\n" +
	"\x13PluginConfiguration\x12S\n" +
	"\x18interactionConfiguration\x18\x01 \x01(\v2\x17.google.protobuf.StructR\x18interactionConfiguration\x12E\n" +
	"\x11pactConfiguration\x18\x02 \x01(\v2\x17.google.protobuf.StructR\x11pactConfiguration\"\x98\t\n" +
	"\x13InteractionResponse\x120\n" +
	"\bcontents\x18\x01 \x01(\v2\x14.io.pact.plugin.BodyR\bcontents\x12D\n" +
	"\x05rules\x18\x02 \x03(\v2..io.pact.plugin.InteractionResponse.RulesEntryR\x05rules\x12S\n" +
	"\n" +
	"generators\x18\x03 \x03(\v23.io.pact.plugin.InteractionResponse.GeneratorsEntryR\n" +
	"generators\x12A\n" +
	"\x0fmessageMetadata\x18\x04 \x01(\v2\x17.google.protobuf.StructR\x0fmessageMetadata\x12U\n" +
	"\x13pluginConfiguration\x18\x05 \x01(\v2#.io.pact.plugin.PluginConfigurationR\x13pluginConfiguration\x12,\n" +
	"\x11interactionMarkup\x18\x06 \x01(\tR\x11interactionMarkup\x12d\n" +
	"\x15interactionMarkupType\x18\a \x01(\x0e2..io.pact.plugin.InteractionResponse.MarkupTypeR\x15interactionMarkupType\x12\x1a\n" +
	"\bpartName\x18\b \x01(\tR\bpartName\x12]\n" +
	"\x0emetadata_rules\x18\t \x03(\v26.io.pact.plugin.InteractionResponse.MetadataRulesEntryR\rmetadataRules\x12l\n" +
	"\x13metadata_generators\x18\n" +
	" \x03(\v2;.io.pact.plugin.InteractionResponse.MetadataGeneratorsEntryR\x12metadataGenerators\x1aW\n" +
	"\n" +
	"RulesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x123\n" +
	"\x05value\x18\x02 \x01(\v2\x1d.io.pact.plugin.MatchingRulesR\x05value:\x028\x01\x1aX\n" +
	"\x0fGeneratorsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12/\n" +
	"\x05value\x18\x02 \x01(\v2\x19.io.pact.plugin.GeneratorR\x05value:\x028\x01\x1a_\n" +
	"\x12MetadataRulesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x123\n" +
	"\x05value\x18\x02 \x01(\v2\x1d.io.pact.plugin.MatchingRulesR\x05value:\x028\x01\x1a`\n" +
	"\x17MetadataGeneratorsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12/\n" +
	"\x05value\x18\x02 \x01(\v2\x19.io.pact.plugin.GeneratorR\x05value:\x028\x01\"'\n" +
	"\n" +
	"MarkupType\x12\x0f\n" +
	"\vCOMMON_MARK\x10\x00\x12\b\n" +
	"\x04HTML\x10\x01\"\xd2\x01\n" +
	"\x1cConfigureInteractionResponse\x12\x14\n" +
	"\x05error\x18\x01 \x01(\tR\x05error\x12E\n" +
	"\vinteraction\x18\x02 \x03(\v2#.io.pact.plugin.InteractionResponseR\vinteraction\x12U\n" +
	"\x13pluginConfiguration\x18\x03 \x01(\v2#.io.pact.plugin.PluginConfigurationR\x13pluginConfiguration\"\x8c\x05\n" +
	"\x16GenerateContentRequest\x120\n" +
	"\bcontents\x18\x01 \x01(\v2\x14.io.pact.plugin.BodyR\bcontents\x12V\n" +
	"\n" +
	"generators\x18\x02 \x03(\v26.io.pact.plugin.GenerateContentRequest.GeneratorsEntryR\n" +
	"generators\x12U\n" +
	"\x13pluginConfiguration\x18\x03 \x01(\v2#.io.pact.plugin.PluginConfigurationR\x13pluginConfiguration\x129\n" +
	"\vtestContext\x18\x04 \x01(\v2\x17.google.protobuf.StructR\vtestContext\x12K\n" +
	"\btestMode\x18\x05 \x01(\x0e2/.io.pact.plugin.GenerateContentRequest.TestModeR\btestMode\x12Q\n" +
	"\n" +
	"contentFor\x18\x06 \x01(\x0e21.io.pact.plugin.GenerateContentRequest.ContentForR\n" +
	"contentFor\x1aX\n" +
	"\x0fGeneratorsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12/\n" +
	"\x05value\x18\x02 \x01(\v2\x19.io.pact.plugin.GeneratorR\x05value:\x028\x01\"3\n" +
	"\bTestMode\x12\v\n" +
	"\aUnknown\x10\x00\x12\f\n" +
	"\bConsumer\x10\x01\x12\f\n" +
	"\bProvider\x10\x02\"'\n" +
	"\n" +
	"ContentFor\x12\v\n" +
	"\aRequest\x10\x00\x12\f\n" +
	"\bResponse\x10\x01\"K\n" +
	"\x17GenerateContentResponse\x120\n" +
	"\bcontents\x18\x01 \x01(\v2\x14.io.pact.plugin.BodyR\bcontents\"\xb3\x01\n" +
	"\x16StartMockServerRequest\x12$\n" +
	"\rhostInterface\x18\x01 \x01(\tR\rhostInterface\x12\x12\n" +
	"\x04port\x18\x02 \x01(\rR\x04port\x12\x10\n" +
	"\x03tls\x18\x03 \x01(\bR\x03tls\x12\x12\n" +
	"\x04pact\x18\x04 \x01(\tR\x04pact\x129\n" +
	"\vtestContext\x18\x05 \x01(\v2\x17.google.protobuf.StructR\vtestContext\"|\n" +
	"\x17StartMockServerResponse\x12\x16\n" +
	"\x05error\x18\x01 \x01(\tH\x00R\x05error\x12=\n" +
	"\adetails\x18\x02 \x01(\v2!.io.pact.plugin.MockServerDetailsH\x00R\adetailsB\n" +
	"\n" +
	"\bresponse\"S\n" +
	"\x11MockServerDetails\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x12\n" +
	"\x04port\x18\x02 \x01(\rR\x04port\x12\x18\n" +
	"\aaddress\x18\x03 \x01(\tR\aaddress\"9\n" +
	"\x19ShutdownMockServerRequest\x12\x1c\n" +
	"\tserverKey\x18\x01 \x01(\tR\tserverKey\"1\n" +
	"\x11MockServerRequest\x12\x1c\n" +
	"\tserverKey\x18\x01 \x01(\tR\tserverKey\"}\n" +
	"\x10MockServerResult\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\x12?\n" +
	"\n" +
	"mismatches\x18\x03 \x03(\v2\x1f.io.pact.plugin.ContentMismatchR\n" +
	"mismatches\"h\n" +
	"\x1aShutdownMockServerResponse\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12:\n" +
	"\aresults\x18\x02 \x03(\v2 .io.pact.plugin.MockServerResultR\aresults\"_\n" +
	"\x11MockServerResults\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12:\n" +
	"\aresults\x18\x02 \x03(\v2 .io.pact.plugin.MockServerResultR\aresults\"\x8d\x01\n" +
	"\x1eVerificationPreparationRequest\x12\x12\n" +
	"\x04pact\x18\x01 \x01(\tR\x04pact\x12&\n" +
	"\x0einteractionKey\x18\x02 \x01(\tR\x0einteractionKey\x12/\n" +
	"\x06config\x18\x03 \x01(\v2\x17.google.protobuf.StructR\x06config\"~\n" +
	"\rMetadataValue\x12@\n" +
	"\x0enonBinaryValue\x18\x01 \x01(\v2\x16.google.protobuf.ValueH\x00R\x0enonBinaryValue\x12\"\n" +
	"\vbinaryValue\x18\x02 \x01(\fH\x00R\vbinaryValueB\a\n" +
	"\x05value\"\xe2\x01\n" +
	"\x0fInteractionData\x12(\n" +
	"\x04body\x18\x01 \x01(\v2\x14.io.pact.plugin.BodyR\x04body\x12I\n" +
	"\bmetadata\x18\x02 \x03(\v2-.io.pact.plugin.InteractionData.MetadataEntryR\bmetadata\x1aZ\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x123\n" +
	"\x05value\x18\x02 \x01(\v2\x1d.io.pact.plugin.MetadataValueR\x05value:\x028\x01\"\x92\x01\n" +
	"\x1fVerificationPreparationResponse\x12\x16\n" +
	"\x05error\x18\x01 \x01(\tH\x00R\x05error\x12K\n" +
	"\x0finteractionData\x18\x02 \x01(\v2\x1f.io.pact.plugin.InteractionDataH\x00R\x0finteractionDataB\n" +
	"\n" +
	"\bresponse\"\xd2\x01\n" +
	"\x18VerifyInteractionRequest\x12I\n" +
	"\x0finteractionData\x18\x01 \x01(\v2\x1f.io.pact.plugin.InteractionDataR\x0finteractionData\x12/\n" +
	"\x06config\x18\x02 \x01(\v2\x17.google.protobuf.StructR\x06config\x12\x12\n" +
	"\x04pact\x18\x03 \x01(\tR\x04pact\x12&\n" +
	"\x0einteractionKey\x18\x04 \x01(\tR\x0einteractionKey\"y\n" +
	"\x16VerificationResultItem\x12\x16\n" +
	"\x05error\x18\x01 \x01(\tH\x00R\x05error\x12=\n" +
	"\bmismatch\x18\x02 \x01(\v2\x1f.io.pact.plugin.ContentMismatchH\x00R\bmismatchB\b\n" +
	"\x06result\"\xd3\x01\n" +
	"\x12VerificationResult\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12C\n" +
	"\fresponseData\x18\x02 \x01(\v2\x1f.io.pact.plugin.InteractionDataR\fresponseData\x12F\n" +
	"\n" +
	"mismatches\x18\x03 \x03(\v2&.io.pact.plugin.VerificationResultItemR\n" +
	"mismatches\x12\x16\n" +
	"\x06output\x18\x04 \x03(\tR\x06output\"}\n" +
	"\x19VerifyInteractionResponse\x12\x16\n" +
	"\x05error\x18\x01 \x01(\tH\x00R\x05error\x12<\n" +
	"\x06result\x18\x02 \x01(\v2\".io.pact.plugin.VerificationResultH\x00R\x06resultB\n" +
	"\n" +
	"\bresponse2\x82\b\n" +
	"\n" +
	"PactPlugin\x12S\n" +
	"\n" +
	"InitPlugin\x12!.io.pact.plugin.InitPluginRequest\x1a\".io.pact.plugin.InitPluginResponse\x12D\n" +
	"\x0fUpdateCatalogue\x12\x19.io.pact.plugin.Catalogue\x1a\x16.google.protobuf.Empty\x12b\n" +
	"\x0fCompareContents\x12&.io.pact.plugin.CompareContentsRequest\x1a'.io.pact.plugin.CompareContentsResponse\x12q\n" +
	"\x14ConfigureInteraction\x12+.io.pact.plugin.ConfigureInteractionRequest\x1a,.io.pact.plugin.ConfigureInteractionResponse\x12b\n" +
	"\x0fGenerateContent\x12&.io.pact.plugin.GenerateContentRequest\x1a'.io.pact.plugin.GenerateContentResponse\x12b\n" +
	"\x0fStartMockServer\x12&.io.pact.plugin.StartMockServerRequest\x1a'.io.pact.plugin.StartMockServerResponse\x12k\n" +
	"\x12ShutdownMockServer\x12).io.pact.plugin.ShutdownMockServerRequest\x1a*.io.pact.plugin.ShutdownMockServerResponse\x12\\\n" +
	"\x14GetMockServerResults\x12!.io.pact.plugin.MockServerRequest\x1a!.io.pact.plugin.MockServerResults\x12\x84\x01\n" +
	"!PrepareInteractionForVerification\x12..io.pact.plugin.VerificationPreparationRequest\x1a/.io.pact.plugin.VerificationPreparationResponse\x12h\n" +
	"\x11VerifyInteraction\x12(.io.pact.plugin.VerifyInteractionRequest\x1a).io.pact.plugin.VerifyInteractionResponseB\x10Z\x0eio.pact.pluginb\x06proto3"

var (
	file_proto_pact_plugin_proto_rawDescOnce sync.Once
	file_proto_pact_plugin_proto_rawDescData []byte
)

func file_proto_pact_plugin_proto_rawDescGZIP() []byte {
	file_proto_pact_plugin_proto_rawDescOnce.Do(func() {
		file_proto_pact_plugin_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_pact_plugin_proto_rawDesc), len(file_proto_pact_plugin_proto_rawDesc)))
	})
	return file_proto_pact_plugin_proto_rawDescData
}

var file_proto_pact_plugin_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_proto_pact_plugin_proto_msgTypes = make([]protoimpl.MessageInfo, 44)
var file_proto_pact_plugin_proto_goTypes = []any{
	(CatalogueEntry_EntryType)(0),           // 0: io.pact.plugin.CatalogueEntry.EntryType
	(Body_ContentTypeHint)(0),               // 1: io.pact.plugin.Body.ContentTypeHint
	(InteractionResponse_MarkupType)(0),     // 2: io.pact.plugin.InteractionResponse.MarkupType
	(GenerateContentRequest_TestMode)(0),    // 3: io.pact.plugin.GenerateContentRequest.TestMode
	(GenerateContentRequest_ContentFor)(0),  // 4: io.pact.plugin.GenerateContentRequest.ContentFor
	(*InitPluginRequest)(nil),               // 5: io.pact.plugin.InitPluginRequest
	(*CatalogueEntry)(nil),                  // 6: io.pact.plugin.CatalogueEntry
	(*InitPluginResponse)(nil),              // 7: io.pact.plugin.InitPluginResponse
	(*Catalogue)(nil),                       // 8: io.pact.plugin.Catalogue
	(*Body)(nil),                            // 9: io.pact.plugin.Body
	(*CompareContentsRequest)(nil),          // 10: io.pact.plugin.CompareContentsRequest
	(*ContentTypeMismatch)(nil),             // 11: io.pact.plugin.ContentTypeMismatch
	(*ContentMismatch)(nil),                 // 12: io.pact.plugin.ContentMismatch
	(*ContentMismatches)(nil),               // 13: io.pact.plugin.ContentMismatches
	(*CompareContentsResponse)(nil),         // 14: io.pact.plugin.CompareContentsResponse
	(*ConfigureInteractionRequest)(nil),     // 15: io.pact.plugin.ConfigureInteractionRequest
	(*MatchingRule)(nil),                    // 16: io.pact.plugin.MatchingRule
	(*MatchingRules)(nil),                   // 17: io.pact.plugin.MatchingRules
	(*Generator)(nil),                       // 18: io.pact.plugin.Generator
	(*PluginConfiguration)(nil),             // 19: io.pact.plugin.PluginConfiguration
	(*InteractionResponse)(nil),             // 20: io.pact.plugin.InteractionResponse
	(*ConfigureInteractionResponse)(nil),    // 21: io.pact.plugin.ConfigureInteractionResponse
	(*GenerateContentRequest)(nil),          // 22: io.pact.plugin.GenerateContentRequest
	(*GenerateContentResponse)(nil),         // 23: io.pact.plugin.GenerateContentResponse
	(*StartMockServerRequest)(nil),          // 24: io.pact.plugin.StartMockServerRequest
	(*StartMockServerResponse)(nil),         // 25: io.pact.plugin.StartMockServerResponse
	(*MockServerDetails)(nil),               // 26: io.pact.plugin.MockServerDetails
	(*ShutdownMockServerRequest)(nil),       // 27: io.pact.plugin.ShutdownMockServerRequest
	(*MockServerRequest)(nil),               // 28: io.pact.plugin.MockServerRequest
	(*MockServerResult)(nil),                // 29: io.pact.plugin.MockServerResult
	(*ShutdownMockServerResponse)(nil),      // 30: io.pact.plugin.ShutdownMockServerResponse
	(*MockServerResults)(nil),               // 31: io.pact.plugin.MockServerResults
	(*VerificationPreparationRequest)(nil),  // 32: io.pact.plugin.VerificationPreparationRequest
	(*MetadataValue)(nil),                   // 33: io.pact.plugin.MetadataValue
	(*InteractionData)(nil),                 // 34: io.pact.plugin.InteractionData
	(*VerificationPreparationResponse)(nil), // 35: io.pact.plugin.VerificationPreparationResponse
	(*VerifyInteractionRequest)(nil),        // 36: io.pact.plugin.VerifyInteractionRequest
	(*VerificationResultItem)(nil),          // 37: io.pact.plugin.VerificationResultItem
	(*VerificationResult)(nil),              // 38: io.pact.plugin.VerificationResult
	(*VerifyInteractionResponse)(nil),       // 39: io.pact.plugin.VerifyInteractionResponse
	nil,                                     // 40: io.pact.plugin.CatalogueEntry.ValuesEntry
	nil,                                     // 41: io.pact.plugin.CompareContentsRequest.RulesEntry
	nil,                                     // 42: io.pact.plugin.CompareContentsResponse.ResultsEntry
	nil,                                     // 43: io.pact.plugin.InteractionResponse.RulesEntry
	nil,                                     // 44: io.pact.plugin.InteractionResponse.GeneratorsEntry
	nil,                                     // 45: io.pact.plugin.InteractionResponse.MetadataRulesEntry
	nil,                                     // 46: io.pact.plugin.InteractionResponse.MetadataGeneratorsEntry
	nil,                                     // 47: io.pact.plugin.GenerateContentRequest.GeneratorsEntry
	nil,                                     // 48: io.pact.plugin.InteractionData.MetadataEntry
	(*wrapperspb.BytesValue)(nil),           // 49: google.protobuf.BytesValue
	(*structpb.Struct)(nil),                 // 50: google.protobuf.Struct
	(*structpb.Value)(nil),                  // 51: google.protobuf.Value
	(*emptypb.Empty)(nil),                   // 52: google.protobuf.Empty
}
var file_proto_pact_plugin_proto_depIdxs = []int32{
	0,  // 0: io.pact.plugin.CatalogueEntry.type:type_name -> io.pact.plugin.CatalogueEntry.EntryType
	40, // 1: io.pact.plugin.CatalogueEntry.values:type_name -> io.pact.plugin.CatalogueEntry.ValuesEntry
	6,  // 2: io.pact.plugin.InitPluginResponse.catalogue:type_name -> io.pact.plugin.CatalogueEntry
	6,  // 3: io.pact.plugin.Catalogue.catalogue:type_name -> io.pact.plugin.CatalogueEntry
	49, // 4: io.pact.plugin.Body.content:type_name -> google.protobuf.BytesValue
	1,  // 5: io.pact.plugin.Body.contentTypeHint:type_name -> io.pact.plugin.Body.ContentTypeHint
	9,  // 6: io.pact.plugin.CompareContentsRequest.expected:type_name -> io.pact.plugin.Body
	9,  // 7: io.pact.plugin.CompareContentsRequest.actual:type_name -> io.pact.plugin.Body
	41, // 8: io.pact.plugin.CompareContentsRequest.rules:type_name -> io.pact.plugin.CompareContentsRequest.RulesEntry
	19, // 9: io.pact.plugin.CompareContentsRequest.pluginConfiguration:type_name -> io.pact.plugin.PluginConfiguration
	49, // 10: io.pact.plugin.ContentMismatch.expected:type_name -> google.protobuf.BytesValue
	49, // 11: io.pact.plugin.ContentMismatch.actual:type_name -> google.protobuf.BytesValue
	12, // 12: io.pact.plugin.ContentMismatches.mismatches:type_name -> io.pact.plugin.ContentMismatch
	11, // 13: io.pact.plugin.CompareContentsResponse.typeMismatch:type_name -> io.pact.plugin.ContentTypeMismatch
	42, // 14: io.pact.plugin.CompareContentsResponse.results:type_name -> io.pact.plugin.CompareContentsResponse.ResultsEntry
	50, // 15: io.pact.plugin.ConfigureInteractionRequest.contentsConfig:type_name -> google.protobuf.Struct
	50, // 16: io.pact.plugin.MatchingRule.values:type_name -> google.protobuf.Struct
	16, // 17: io.pact.plugin.MatchingRules.rule:type_name -> io.pact.plugin.MatchingRule
	50, // 18: io.pact.plugin.Generator.values:type_name -> google.protobuf.Struct
	50, // 19: io.pact.plugin.PluginConfiguration.interactionConfiguration:type_name -> google.protobuf.Struct
	50, // 20: io.pact.plugin.PluginConfiguration.pactConfiguration:type_name -> google.protobuf.Struct
	9,  // 21: io.pact.plugin.InteractionResponse.contents:type_name -> io.pact.plugin.Body
	43, // 22: io.pact.plugin.InteractionResponse.rules:type_name -> io.pact.plugin.InteractionResponse.RulesEntry
	44, // 23: io.pact.plugin.InteractionResponse.generators:type_name -> io.pact.plugin.InteractionResponse.GeneratorsEntry
	50, // 24: io.pact.plugin.InteractionResponse.messageMetadata:type_name -> google.protobuf.Struct
	19, // 25: io.pact.plugin.InteractionResponse.pluginConfiguration:type_name -> io.pact.plugin.PluginConfiguration
	2,  // 26: io.pact.plugin.InteractionResponse.interactionMarkupType:type_name -> io.pact.plugin.InteractionResponse.MarkupType
	45, // 27: io.pact.plugin.InteractionResponse.metadata_rules:type_name -> io.pact.plugin.InteractionResponse.MetadataRulesEntry
	46, // 28: io.pact.plugin.InteractionResponse.metadata_generators:type_name -> io.pact.plugin.InteractionResponse.MetadataGeneratorsEntry
	20, // 29: io.pact.plugin.ConfigureInteractionResponse.interaction:type_name -> io.pact.plugin.InteractionResponse
	19, // 30: io.pact.plugin.ConfigureInteractionResponse.pluginConfiguration:type_name -> io.pact.plugin.PluginConfiguration
	9,  // 31: io.pact.plugin.GenerateContentRequest.contents:type_name -> io.pact.plugin.Body
	47, // 32: io.pact.plugin.GenerateContentRequest.generators:type_name -> io.pact.plugin.GenerateContentRequest.GeneratorsEntry
	19, // 33: io.pact.plugin.GenerateContentRequest.pluginConfiguration:type_name -> io.pact.plugin.PluginConfiguration
	50, // 34: io.pact.plugin.GenerateContentRequest.testContext:type_name -> google.protobuf.Struct
	3,  // 35: io.pact.plugin.GenerateContentRequest.testMode:type_name -> io.pact.plugin.GenerateContentRequest.TestMode
	4,  // 36: io.pact.plugin.GenerateContentRequest.contentFor:type_name -> io.pact.plugin.GenerateContentRequest.ContentFor
	9,  // 37: io.pact.plugin.GenerateContentResponse.contents:type_name -> io.pact.plugin.Body
	50, // 38: io.pact.plugin.StartMockServerRequest.testContext:type_name -> google.protobuf.Struct
	26, // 39: io.pact.plugin.StartMockServerResponse.details:type_name -> io.pact.plugin.MockServerDetails
	12, // 40: io.pact.plugin.MockServerResult.mismatches:type_name -> io.pact.plugin.ContentMismatch
	29, // 41: io.pact.plugin.ShutdownMockServerResponse.results:type_name -> io.pact.plugin.MockServerResult
	29, // 42: io.pact.plugin.MockServerResults.results:type_name -> io.pact.plugin.MockServerResult
	50, // 43: io.pact.plugin.VerificationPreparationRequest.config:type_name -> google.protobuf.Struct
	51, // 44: io.pact.plugin.MetadataValue.nonBinaryValue:type_name -> google.protobuf.Value
	9,  // 45: io.pact.plugin.InteractionData.body:type_name -> io.pact.plugin.Body
	48, // 46: io.pact.plugin.InteractionData.metadata:type_name -> io.pact.plugin.InteractionData.MetadataEntry
	34, // 47: io.pact.plugin.VerificationPreparationResponse.interactionData:type_name -> io.pact.plugin.InteractionData
	34, // 48: io.pact.plugin.VerifyInteractionRequest.interactionData:type_name -> io.pact.plugin.InteractionData
	50, // 49: io.pact.plugin.VerifyInteractionRequest.config:type_name -> google.protobuf.Struct
	12, // 50: io.pact.plugin.VerificationResultItem.mismatch:type_name -> io.pact.plugin.ContentMismatch
	34, // 51: io.pact.plugin.VerificationResult.responseData:type_name -> io.pact.plugin.InteractionData
	37, // 52: io.pact.plugin.VerificationResult.mismatches:type_name -> io.pact.plugin.VerificationResultItem
	38, // 53: io.pact.plugin.VerifyInteractionResponse.result:type_name -> io.pact.plugin.VerificationResult
	17, // 54: io.pact.plugin.CompareContentsRequest.RulesEntry.value:type_name -> io.pact.plugin.MatchingRules
	13, // 55: io.pact.plugin.CompareContentsResponse.ResultsEntry.value:type_name -> io.pact.plugin.ContentMismatches
	17, // 56: io.pact.plugin.InteractionResponse.RulesEntry.value:type_name -> io.pact.plugin.MatchingRules
	18, // 57: io.pact.plugin.InteractionResponse.GeneratorsEntry.value:type_name -> io.pact.plugin.Generator
	17, // 58: io.pact.plugin.InteractionResponse.MetadataRulesEntry.value:type_name -> io.pact.plugin.MatchingRules
	18, // 59: io.pact.plugin.InteractionResponse.MetadataGeneratorsEntry.value:type_name -> io.pact.plugin.Generator
	18, // 60: io.pact.plugin.GenerateContentRequest.GeneratorsEntry.value:type_name -> io.pact.plugin.Generator
	33, // 61: io.pact.plugin.InteractionData.MetadataEntry.value:type_name -> io.pact.plugin.MetadataValue
	5,  // 62: io.pact.plugin.PactPlugin.InitPlugin:input_type -> io.pact.plugin.InitPluginRequest
	8,  // 63: io.pact.plugin.PactPlugin.UpdateCatalogue:input_type -> io.pact.plugin.Catalogue
	10, // 64: io.pact.plugin.PactPlugin.CompareContents:input_type -> io.pact.plugin.CompareContentsRequest
	15, // 65: io.pact.plugin.PactPlugin.ConfigureInteraction:input_type -> io.pact.plugin.ConfigureInteractionRequest
	22, // 66: io.pact.plugin.PactPlugin.GenerateContent:input_type -> io.pact.plugin.GenerateContentRequest
	24, // 67: io.pact.plugin.PactPlugin.StartMockServer:input_type -> io.pact.plugin.StartMockServerRequest
	27, // 68: io.pact.plugin.PactPlugin.ShutdownMockServer:input_type -> io.pact.plugin.ShutdownMockServerRequest
	28, // 69: io.pact.plugin.PactPlugin.GetMockServerResults:input_type -> io.pact.plugin.MockServerRequest
	32, // 70: io.pact.plugin.PactPlugin.PrepareInteractionForVerification:input_type -> io.pact.plugin.VerificationPreparationRequest
	36, // 71: io.pact.plugin.PactPlugin.VerifyInteraction:input_type -> io.pact.plugin.VerifyInteractionRequest
	7,  // 72: io.pact.plugin.PactPlugin.InitPlugin:output_type -> io.pact.plugin.InitPluginResponse
	52, // 73: io.pact.plugin.PactPlugin.UpdateCatalogue:output_type -> google.protobuf.Empty
	14, // 74: io.pact.plugin.PactPlugin.CompareContents:output_type -> io.pact.plugin.CompareContentsResponse
	21, // 75: io.pact.plugin.PactPlugin.ConfigureInteraction:output_type -> io.pact.plugin.ConfigureInteractionResponse
	23, // 76: io.pact.plugin.PactPlugin.GenerateContent:output_type -> io.pact.plugin.GenerateContentResponse
	25, // 77: io.pact.plugin.PactPlugin.StartMockServer:output_type -> io.pact.plugin.StartMockServerResponse
	30, // 78: io.pact.plugin.PactPlugin.ShutdownMockServer:output_type -> io.pact.plugin.ShutdownMockServerResponse
	31, // 79: io.pact.plugin.PactPlugin.GetMockServerResults:output_type -> io.pact.plugin.MockServerResults
	35, // 80: io.pact.plugin.PactPlugin.PrepareInteractionForVerification:output_type -> io.pact.plugin.VerificationPreparationResponse
	39, // 81: io.pact.plugin.PactPlugin.VerifyInteraction:output_type -> io.pact.plugin.VerifyInteractionResponse
	72, // [72:82] is the sub-list for method output_type
	62, // [62:72] is the sub-list for method input_type
	62, // [62:62] is the sub-list for extension type_name
	62, // [62:62] is the sub-list for extension extendee
	0,  // [0:62] is the sub-list for field type_name
}

func init() { file_proto_pact_plugin_proto_init() }
func file_proto_pact_plugin_proto_init() {
	if File_proto_pact_plugin_proto != nil {
		return
	}
	file_proto_pact_plugin_proto_msgTypes[20].OneofWrappers = []any{
		(*StartMockServerResponse_Error)(nil),
		(*StartMockServerResponse_Details)(nil),
	}
	file_proto_pact_plugin_proto_msgTypes[28].OneofWrappers = []any{
		(*MetadataValue_NonBinaryValue)(nil),
		(*MetadataValue_BinaryValue)(nil),
	}
	file_proto_pact_plugin_proto_msgTypes[30].OneofWrappers = []any{
		(*VerificationPreparationResponse_Error)(nil),
		(*VerificationPreparationResponse_InteractionData)(nil),
	}
	file_proto_pact_plugin_proto_msgTypes[32].OneofWrappers = []any{
		(*VerificationResultItem_Error)(nil),
		(*VerificationResultItem_Mismatch)(nil),
	}
	file_proto_pact_plugin_proto_msgTypes[34].OneofWrappers = []any{
		(*VerifyInteractionResponse_Error)(nil),
		(*VerifyInteractionResponse_Result)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_pact_plugin_proto_rawDesc), len(file_proto_pact_plugin_proto_rawDesc)),
			NumEnums:      5,
			NumMessages:   44,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_pact_plugin_proto_goTypes,
		DependencyIndexes: file_proto_pact_plugin_proto_depIdxs,
		EnumInfos:         file_proto_pact_plugin_proto_enumTypes,
		MessageInfos:      file_proto_pact_plugin_proto_msgTypes,
	}.Build()
	File_proto_pact_plugin_proto = out.File
	file_proto_pact_plugin_proto_goTypes = nil
	file_proto_pact_plugin_proto_depIdxs = nil
}
